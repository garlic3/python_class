day01

개발 환경 설정, 웹 크롤링의 이해

파일 관리
1) memo 이론자료
2) resource 수업과 관련된 자료(프로그램, 이미지.. 등)
3) workspace 소스코드

OT

강사: 서민성
수업시수: 
	09/14, 09/16, 09/19, 09/21, 09/26, 09/28, 09/30, 10/5, 10/11, 10/12
	3시간 * 10일 = 30시간

수업자료: 
	오픈 카카오 채팅방(자료 및 줌 링크)
수업방식: 
	이론 및 설명 -> 메모장 -> 예제 -> 실습
이메일: yup1yup1201@gmail.com
      제목 : 1900 파이썬2 홍길동
      내용 : 소스코드, 오류메시지
휴강일: 
자리: 대면 자리는 고정! 단 비대면으로 참석하실경우 다른분이 사용하실 수 있음 -> 참고

---------------------------------------------------------------------------------
인터프리터 설치(Anaconda JupyterNotebook)
시스템 - > 정보 -> 운영체제 확인
만들어놓은 폴더(resource)로 이동 후 관리자 권한으로 실행
첫번째 옵션: 파이썬 명령어들 운영체제에게 경로를 알려주는것 -> 체크!
구글에 anaconda 검색
-> 운영체제에 맞는 다운로드 파일 설치
-> 다운로드

설치 프로그램 실행
Next -> I agree -> 경로 설정 -> All Users
-> Add to Path 체크 -> install -> 튜토리얼 체크 해제
설치 경로: c\Anaconda3


경로설정 
쥬피터 노트북 -> 오른쪽 클릭 -> 파일위치 열기 -> 속성 -> 경로 설정

쥬피터 실행


# 단축키
# ctrl + (+/-) = 화면 확대 및 축소
# ctrl + / = 주석 설정 및 해제 
# ctrl + enter -> 해당 코드 실행

# 셀을 선택하고 esc를 누르면 커맨드 모드로 변경
# 셀을 선택하고 enter를 누르면 코드 편집 모드로 변경

# 커맨드 모드 => 셀을 편집 및 추가
# 코드 편집 모드 => 코드 작성 및 수정

# ctrl + s => 저장
# ctrl + enter => 해당 셀 실행

# l -> 소스코드 줄수 보이기 
---------------------------------------------------------------------------------


파이썬 복습

1) 주석 , 출력함수, 입력함수 

	주석
	1. 개발자간의 소통 
	2. 지금 당장 사용하지 않는 코드가 있을 때
	한줄주석: #
	ctrl + / -> 해제할 때도 동일한 단축키 


	* 주석이 안될때
	ctrl + shift 입력키 Microsoft 입력키로 변경

	출력함수
	print("서민성")
	print('서민성')

	입력함수
	input("입력받을때 보여주고 싶은 문자열")
	사용자가 입력한 값을 문자열(str)타입으로 전달

1) 변수
	정의: 값을 저장하는 저장공간
	사용목적: 값을 재사용

	변수명 = 초기값
	변수에 처음 값을 저장하는것 -> 초기화

2) 자료형
	정수형	int	1,2,3,4,5....
	실수형	float	1.1, 2.2, 3.3 ... 
	문자열	str	"hello", "안녕", "A", "가".. 
	논리형	bool	True, False 

동적 타이핑
	파이썬은 넣어준 값에 따라서 저장공간(변수)의 타입이 변함
	-> 소스코드가 길어질 경우 예상치 못한 값이 대입될 수 있음

변수 선언시 주의사항
	1. 문자로 시작(숫자로 시작 불가능)
		1b(X) b1(O)
	2. 특수문자를 사용할 수 없음(단, _언더바는 사용가능)
	3. 공백을 사용할 수 없음
		my name(x) 
		my_name(O) -> 파이썬에서 주로 사용
			   -> 팟홀 표기법 또는 스네이크 표기법
		myName(O)  -> 카멜 표기법
	4. 소문자를 사용(특수한 상황에 대문자를 사용)
	5. 뜻이 있는 단어를 선택
		a = "서민성" name = "서민성"
	6. 한글은 사용하지 않음
	7. 키워드 사용 하지 않음
		ex) class(x) if(x) while(x)

3) 연산자
	최우선 연산자 
	단항 연산
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자


4) 제어문

	조건식: 참이나 거짓을 판별할 수 있는 문장

	조건문 	
		if문
		if 조건식1:
		    조건식1이 참이면 실행할 코드
		elif 조건식2:
		    조건식 1이 거짓이고 조건식2가 참이면 실행할 코드
		else:
		    위의 조건식이 모두 거짓이면 실행할 코드

		* else는 가장 가까운 if를 인식함 

	반복문 	
		for문
		반복되는 횟수를 알거나 알수 있을 때 사용

		for i in range(초기값, 끝값, 증감값):
		    반복할 코드

		while문
		    반복 횟수를 모를때 사용
			
		while 조건식:
		    반복할 코드

	기타 제어문
		break
		반복문을 강제로 종료
		
		continue 
		반복에서 제외


5) 자료형 변환(casting)

	강제 형변환
	int() 
		int(정수문자열)
		int(실수)

	float()
		float(실수문자열)
		float(정수)

	str()
		str(정수)
		str(실수)



6) 컬렉션 
	여러값을 하나의 이름으로 묶은 모음
	list(리스트), tuple(튜플), set(세트), dict(딕셔너리)

	리스트
	리스트명 = [값1, 값2, 값3...]	

	튜플
	저장된 값을 수정할 수 없는 리스트
	튜플명 = (값1, 값2, 값3...)

	세트
	중복된 값 저장 불가능
	저장되는 순서가 없음
	수학의 집합 개념과 유사
	세트명 = {값1, 값2, 값3..}

	딕셔너리
	key와 value가 한쌍으로 저장 되는 구조
	딕셔너리명 = {key1:value1, key2:value2, key3:value3}

	
	리스트	튜플 	세트 
	순서O	순서O	순서X
	중복O	중복O	중복X
	수정O	수정X	수정O

	멤버 연산자
	A in B: B에 A가 있으면 참 없으면 거짓
	A not in B: B에 A가 없으면 참 있으면 거짓


7) 함수
	1. 코드의 간결화
	2. 코드의 재사용

	def 함수명(매개변수명):
	    실행할 코드
	    return 리턴값

	매개변수: 외부에서 전달받아 함수 내에서 사용되는 변수(parameter)
	리턴값: 외부로 전달해줄 값(반환값)
	인수: 함수에 전달시켜줄 값, argument

	함수의 사용
	함수명()
	
	함수의 형태 
	매개변수 x, return x
	매개변수 o, return x
	매개변수 x, retrun o
	매개변수 o, return o

8) 클래스

	공통요소(변수, 함수)를 모아 놓은것
	1. 모든 클래스는 추상적
	2. 클래스는 타입
	
	class 클래스명:
	    ...(필드)
	클래스명 규칙: Upper camle case

	필드
		클래스 안에 있는 변수와 메소드
	
	객체
		추상적인 개념을 구체화(실체화)시킨것
	
	객체화
		추상적인 개념을 구체화 하는 작업
		객체명 = 클래스()

	객체와 인스턴스
		피자붕어빵 = 붕어빵()
		피자 붕어빵은 객체 입니다
		피자붕어빵은 붕어빵 클래스의 인스턴스(instance)입니다

	
	인스턴스 변수		클래스 변수
	인스턴스마다 다른값  		공유하는 값 
	인스턴스 접근(O)		인스턴스 접근(O)
	클래스 접근(x)		클래스 접근(O)
	

	인스턴스 메소드	클래스 메소드	정적 메소드
	인스턴스 호출(O)	인스턴스 호출(O)	인스턴스 호출(O)
	클래스 호출(x)	클래스 호출(O)	클래스 호출(O)

9) 모듈
	파이썬 파일 

	import 방법
	1. from 모듈 import 함수
	2. from 모듈 import 함수1, 함수2
	3. from import*
	
	*import 구문은 항상 제일 위에 작성
	
	함수 사용
	모듈명.함수명()
	-> 전체가 아닌 일부 함수만 import 했을경우 모듈명 생략 가능

	별명(alias)
	from 모듈 import 함수 as 별명

	표준 모듈
	파이썬에 기본적으로 내장되어 있는 모듈 -> 별도의 설치 필요 없음

	외부 모듈
	패키지 = 모듈의 상위개념
	외부에서 만들어진 패키지를 통해 패키지 내부에 있는 모듈을 사용
	pip 패키지 관리자

모듈
	하나의 파이썬 파일(.py)

패키지
	모듈의 집합. 파이썬 모듈을 모아 놓은 컨테이너

라이브러리
	여러 모듈과 패키지를 모아 놓은 컨테이너


웹 크롤링의 이해


웹 크롤링
	완성된 웹 페이지에서 필요한 정보를 수집하여 추출하는 과정
	= 웹 스크래핑

웹 클라이언트 -> 요청(request) -> 웹 서버
           <- 응답(response) <- 


클라이언트(사용자)가 웹서버(ex. naver, google ...)에 요청을 했을때, 서버에서는 일반적으로 HTML, CSS, JavaScript, Image 형식으로 응답을 하게 됩니다.
html로 작성된 문서를 웹 브라우저가 해석하여 이용자에게 보여줌


브라우저는 위에 보이는 HTML문자열을 DOM Tree로 변환하여 문서를 표현하게 됩니다.
즉, 페이지 소스보기는 서버에서 최초로 응답을 준 코드가 되겠고 개발자도구에서는 브라우저가 해석을 한 코드가 되겠습니다. (이것을 DOM Tree)
그러면 개발자 도구는 언제 사용하는가?selenium을 사용할때 쓰시면 됩니다.왜냐하면 selenium은 브라우저를 통한 자동화이기 때문입니다.



requests 라이브러리
	http 라이브러리

BeautifulSoup4
	구문을 분석해서 필요한 내용만 추출하는 패키지
	
HTML(HyperText Markup Language)
	웹 페이지를 구성하는 언어
	<div class="root">HTML</div>
	시작태그 태그종류 속성이름 속성값 내용 종료태그



